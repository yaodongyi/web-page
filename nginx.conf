
#user  nobody;
worker_processes  1;

# error_log  logs/error.log;
# error_log  logs/error.log  notice;
# error_log  logs/error.log  info;


# pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    # log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    # access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    upstream tomcatserver_cms {
       server 127.0.0.1:8888;
    }

    server {
        listen       80;

        server_name  waituntil.online; # 这里设置了https的域名 如果没有则使用初始值
        # server_name  127.0.0.1; 

        listen 443 ssl;
        ssl_certificate      ssl/*******_waituntil.online.pem; # 域名的pem 放在nginx下的ssl目录
        ssl_certificate_key  ssl/*******_waituntil.online.key; # 域名的key 放在nginx下的ssl目录
        ssl_session_timeout 5m;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;

        #charset koi8-r;

        # location /status {
        #     stub_status on;
        #     access_log /usr/local/nginx/logs/status.log;
        #     auth_basic "NginxStatus"; 
        # }

        # access_log  logs/host.access.log  main;

        location / {
            add_header 'Access-Control-Allow-Origin' '*';
            proxy_set_header HOST waituntil.online;
            # proxy_pass http://localhost:8889;
        }

        # /pwa-vue 为项目的基路径,代理到proxy_pass
        # location /pwa-vue/ {
        #     proxy_pass http://localhost/github-javascript/javascript/pwa-vuedemo/dist/; # 放在nginx上的目录
        #     root   html;
        #     index  index.html index.htm;
        # } 

        location /web-page/ {
            proxy_pass http://localhost/github-javascript/javascript/publicity-page/dist/; # 放在nginx上的目录
            root   html;
            index  index.html index.htm; 
        }

        # 本地调试线上公众号可以将此打开 
        # http://tomcatserver_cms 配置项目运行host:port
        # 上面的server_name 配置线上域名 
        # 如果域名是https 对应配置ssl证书
        # location ~ / {
        #     add_header 'Access-Control-Allow-Origin' '*';
        #     proxy_pass http://tomcatserver_cms;
        #     root   html;
        #     index  index.html;
        # }
        

        # location / {
        #     root   html;
        #     index  index.html index.htm;
        # }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    # server {
    #    listen       443 ssl;
    #    server_name  waituntil.online;

    #    ssl_certificate      ***.pem;
    #    ssl_certificate_key  ***..key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    # }
    # include servers/*;
}


